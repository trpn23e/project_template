spring.application.version=0.0.1
spring.mvc.favicon.enabled=false

spring.output.ansi.enabled=always

# JSP \uD638\uCD9C\uC744 \uC704\uD574 \uC0AC\uC6A9 (WebConfig\uC5D0 @EnableWebMvc\uAC00 \uC788\uACE0, ViewResolver\uC5D0\uC11C
# \uC124\uC815\uD574\uC918\uC11C \uD544\uC694\uC5C6\uC744\uAC83 \uAC19\uC9C0\uB9CC \uC788\uC5B4\uC57C \uB3CC\uC544\uAC00\uB294\uB4EF..)
spring.mvc.view.prefix = /WEB-INF/jsp/
spring.mvc.view.suffix = .jsp

#JPA \uC0AC\uC6A9\uD560 DB (demo) (DemoJpaConfiguration\uC5D0\uC11C \uC0AC\uC6A9)
#demo.datasource.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver
#demo.datasource.url=jdbc:sqlserver://127.0.0.1:1433;databaseName=XXXX
#demo.datasource.username=sa
#demo.datasource.password=XXXXX
demo.datasource.driverClassName=org.h2.Driver
demo.datasource.url=jdbc:h2:~/test;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;ifexists=true;
demo.datasource.username=sa
demo.datasource.password=

# Mybatis\uC0AC\uC6A9\uD560 DB 1 (demo) (SqlSessionFactoryConfig\uC5D0\uC11C \uC0AC\uC6A9)
#spring.db1.datasource.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver
#spring.db1.datasource.url=jdbc:sqlserver://127.0.0.1:1433;databaseName=XXXXX
#spring.db1.datasource.username=sa
#spring.db1.datasource.password=XXXXXX
spring.db1.datasource.driverClassName=org.h2.Driver
spring.db1.datasource.url=jdbc:h2:~/test;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;ifexists=true
spring.db1.datasource.username=sa
spring.db1.datasource.password=

# Mybatis\uC0AC\uC6A9\uD560 DB 2 (demo) (\uCD94\uAC00\uB85C DataSource\uC124\uC815 Config\uB97C \uB9CC\uB4E0\uB2E4\uBA74 SqlSessionFactoryConfig\uC640 \uBE44\uC2B7\uD55C
# \uD074\uB798\uC2A4\uB97C \uD558\uB098 \uB354 \uB9CC\uB4E4\uC5B4\uC11C \uC0AC\uC6A9\uD558\uBA74 \uB428)
#spring.db2.datasource.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver
#spring.db2.datasource.url=jdbc:sqlserver://127.0.0.1:1433;databaseName=XXXXX
#spring.db2.datasource.username=sa
#spring.db2.datasource.password=XXXXX
spring.db2.datasource.driverClassName=org.h2.Driver
spring.db2.datasource.url=jdbc:h2:~/test;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;ifexists=true
spring.db2.datasource.username=sa
spring.db2.datasource.password=

spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update

spring.jpa.database=sql_server

# datasource \uC0DD\uC131\uC5D0 \uC2E4\uD328\uD574\uB3C4 bootRun\uC744 \uC9C4\uD589\uD558\uB3C4\uB85D \uD568
# h2 db\uAD6C\uB3D9\uC2DC resources/data.sql, schema.sql \uC2A4\uD06C\uB9BD\uD2B8 \uC2E4\uD589\uD558\uBA74\uC11C \uC624\uB958 \uB0A0\uACBD\uC6B0 \uB300\uBE44\uD558\uC5EC \uCD94\uAC00
spring.datasource.continue-on-error=true

#spring.thymeleaf.enabled=true
#spring.thymeleaf.mode=HTML5
# \uD398\uC774\uC9C0 \uCD9C\uB825 \uD15C\uD50C\uB9BF thymeleaf\uB97C \uBE44\uD65C\uC131\uD654 \uD568, \uBE44\uD65C\uC131\uD654\uC2DC build.gradle\uC758
# dependency\uB3C4 \uC9C0\uC6B0\uAC70\uB098 \uC8FC\uC11D\uCC98\uB9AC \uD574\uC8FC\uB294\uAC8C \uC88B\uC74C
spring.thymeleaf.enabled=false

spring.devtools.livereload.enabled=true

spring.resources.static-locations=classpath:/resources/,classpath:/static/

server.port=50000

spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
spring.servlet.multipart.location=${java.io.tmpdir}

spring.jackson.serialization.write-dates-as-timestamps=false

#JMS
#spring.activemq.broker-url=tcp://localhost:61616
#spring.activemq.user=admin
#spring.activemq.password=admin
jms.url=tcp://localhost:61616

# embedded tomcat \uC5D0\uC11C spring boot \uBD80\uD305\uB54C dependency\uC758 tld\uB97C \uC77D\uC744\uB54C warning
# \uC624\uB958\uB97C \uBC29\uC9C0\uD558\uAE30 \uC704\uD574 \uC77D\uB294\uAC78 stop\uC2DC\uD0B4 \uB2E8, jsp\uB4F1\uC744 \uC0AC\uC6A9\uD574\uC57C\uD558\uBA74 tag library\uAC00 \uC5C6\uB2E4\uACE0
# \uC624\uB958 \uBC1C\uC0DD\uD558\uBBC0\uB85C \uC0AC\uC6A9\uD558\uBA74 \uC548\uB428, war\uB85C \uBB36\uC5B4\uC11C \uBC30\uD3EC\uC2DC\uC5D0\uB294 \uC798 \uC791\uB3D9\uD55C\uB2E4 spring boot embedded tomcat\uC774
# \uBB54\uAC00 \uC81C\uB300\uB85C \uC9C0\uC6D0\uC548\uD558\uB294\uB4EF..)
# server.tomcat.additional-tld-skip-patterns=*.jar

# spring boot \uAE30\uBCF8 whitelabel \uC624\uB958 \uD398\uC774\uC9C0 \uBE44\uD65C\uC131\uD654
# (embedded tomcat\uC5D0\uC11C\uB294 \uC791\uB3D9 \uC548\uB428, war \uBC30\uD3EC\uC2DC error \uD398\uC774\uC9C0 \uC7AC\uC815\uC758 config\uB4F1\uC744
# \uB9CC\uB4E4\uACE0 \uC801\uC6A9\uD574\uC57C\uD568)
server.error.whitelabel.enabled=false