version = '2.0.2-RC'


dependencies {


	compile project(':project')

	compile('org.springframework.boot:spring-boot-starter-data-solr')



	// JWT
	//compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.0'
	// image thumbnail
	compile group: 'net.coobird', name: 'thumbnailator', version: '0.4.8'
	// pdf to image
	//compile group: 'org.apache.pdfbox', name: 'pdfbox', version: '2.0.9'
	//compile group: 'org.apache.pdfbox', name: 'pdfbox-tools', version: '2.0.9'

	// mime type to extension
	compile group: 'org.apache.tika', name: 'tika-core', version: '1.18'
	compile group: 'org.apache.tika', name: 'tika-parsers', version: '1.18'

	// https://mvnrepository.com/artifact/commons-net/commons-net
	compile group: 'commons-net', name: 'commons-net', version: '3.6'
	// https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient
	compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.5'
	// https://mvnrepository.com/artifact/org.springframework.integration/spring-integration-smb
	compile group: 'org.springframework.integration', name: 'spring-integration-smb', version: '0.5.0.RELEASE'

	compile group: 'com.nimbusds', name: 'nimbus-jose-jwt', version: '5.9'

	// https://mvnrepository.com/artifact/org.apache.solr/solr-solrj
	compile group: 'org.apache.solr', name: 'solr-solrj', version: '7.3.0'

	compile group: 'net.sf.barcode4j', name: 'barcode4j', version: '2.1'

	//join - mail
	compile group: 'javax.mail', name: 'javax.mail-api', version: '1.4.7'

	compile group: 'com.sun.mail', name: 'javax.mail', version: '1.6.0'
	compile group: 'org.springframework', name: 'spring-context-support', version: '4.3.14.RELEASE'
	compile group: 'com.h2database', name: 'h2', version: '1.4.197'

	//read barcode in pdf
	//compile group: 'com.google.zxing', name: 'core', version: '3.3.3'
	//compile group: 'com.google.zxing', name: 'javase', version: '3.3.3'

}

task pathingJar(type: Jar) {
	dependsOn configurations.runtime
	appendix = 'pathing'

	doFirst {
		manifest {
			attributes 'Class-Path': configurations.runtime.files.collect {
				it.toURI().toURL().toString().replaceFirst(/file:\/+/, '/').replaceAll(' ', '%20')
			}.join(' ')
		}
	}
}

bootRun {
	systemProperties = System.properties
	dependsOn pathingJar
	doFirst {
		classpath = files("$buildDir/classes/java/main", "$buildDir/resources/main", pathingJar.archivePath)
	}
}

